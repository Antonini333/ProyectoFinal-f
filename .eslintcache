[{"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/index.js":"1","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/App.js":"2","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Redux/store.js":"3","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Redux/reducer.js":"4","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/Login/Login.jsx":"5","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Redux/types.js":"6","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/Homepage/Homepage.jsx":"7","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/Register/Register.jsx":"8","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Components/Navbar/Navbar.jsx":"9"},{"size":340,"mtime":1608040719742,"results":"10","hashOfConfig":"11"},{"size":623,"mtime":1608492385908,"results":"12","hashOfConfig":"11"},{"size":243,"mtime":1608040719738,"results":"13","hashOfConfig":"11"},{"size":513,"mtime":1608314239318,"results":"14","hashOfConfig":"11"},{"size":1761,"mtime":1608473494344,"results":"15","hashOfConfig":"11"},{"size":57,"mtime":1608314239318,"results":"16","hashOfConfig":"11"},{"size":3316,"mtime":1608495760238,"results":"17","hashOfConfig":"11"},{"size":2060,"mtime":1608473535445,"results":"18","hashOfConfig":"11"},{"size":1159,"mtime":1608497899011,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1lez6op",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/index.js",[],["40","41"],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/App.js",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Redux/store.js",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Redux/reducer.js",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/Login/Login.jsx",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Redux/types.js",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/Homepage/Homepage.jsx",["42"],"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { POSTS } from '../../Redux/types';\nimport { Scrollbars } from 'rc-scrollbars'\nimport './Homepage.scss';\n\n\nconst Homepage = ({ dispatch, user, posts }) => {\n\n\n    useEffect(() => {\n        const options = { headers: { Authorization: `Bearer ${user.token}` } };\n        axios.get('http://localhost:3000/readallposts', options)\n\n            .then(posts => dispatch({ type: POSTS, payload: posts.data }))\n            .catch(error => console.log())\n\n    }, [])\n\n    const handleSubmit = async (event) =>{\n        try{\n        event.preventDefault(); // Prevent the page from refreshing.\n        \n        const newPost={\n            text: event.target.text.value,\n            postedBy: user._id,    \n        };\n        const options = { headers: { Authorization: `Bearer ${user.token}` } };\n        axios.post('http://localhost:3000/post', newPost, options)\n        \n        }catch{\n         console.log('Falla');\n    }  \n}\n\n    return (\n        <div className='homepage'>\n            <div className='mainContainer'>\n\n                <div className='profile'><h2>Your profile</h2></div>\n\n                <div className='TLContainer'>\n                    <div className=\"header\"><h2>What are people talking about?</h2></div>\n                    <Scrollbars style={{ width: 600, height: 400 }}>\n                        <div className=\"posts\">\n                            {posts?.map(post =>\n                                <div className=\"cardPost\" key={post._id}>\n                                    <div className=\"cardPostHeader\">Posted by: <b>{post.postedBy}</b></div>\n                                    <div className=\"cardPostText\">{post.text}</div>\n                                    <form>\n                                    <div className=\"inputBox\">\n                                        <textarea className=\"inputComment\" type=\"textarea\" name=\"comment\" placeholder=\"Share your opinion\"></textarea>\n                                        <div className=\"buttonBox\">\n                                            <button type=\"submit\" className=\"likeButton\">Like</button>\n                                            <button type=\"submit\" className=\"sendButton\">Comment</button>\n                                        </div>\n                                    </div>\n                                    </form>\n                                </div>)}\n                        </div>\n                    </Scrollbars>\n                    <div className=\"newPostBox\">\n                    <form onSubmit={handleSubmit}>       \n                                    \n                    <textarea className=\"newPost\" type=\"textarea\" name=\"newPost\" placeholder=\"And you? What you're thinking about?\"></textarea>\n                    <button type=\"submit\" className=\"newPostButton\"><h3>Share your wisdom</h3></button>\n                    \n                    </form>\n                    </div>\n\n                </div>\n\n                <div className=\"calendar\"><h2>Friends/Calendar</h2></div>\n            </div>\n        </div>\n\n\n\n    )\n}\n\nconst mapStateToProps = state => {\n\n    return {\n        user: state.user,\n        posts: state.posts\n    }\n}\n\n\nexport default connect(mapStateToProps)(Homepage);\n\n","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/Register/Register.jsx",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Components/Navbar/Navbar.jsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":19,"column":8,"nodeType":"49","endLine":19,"endColumn":10,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user.token'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [dispatch, user.token]",{"range":"56","text":"57"},[568,570],"[dispatch, user.token]"]
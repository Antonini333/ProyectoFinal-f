[{"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/index.js":"1","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/App.js":"2","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Redux/store.js":"3","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Redux/reducer.js":"4","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/Login/Login.jsx":"5","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Redux/types.js":"6","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/Homepage/Homepage.jsx":"7","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/Register/Register.jsx":"8","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Components/Navbar/Navbar.jsx":"9","/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/People/People.jsx":"10"},{"size":340,"mtime":1608040719742,"results":"11","hashOfConfig":"12"},{"size":744,"mtime":1608748229239,"results":"13","hashOfConfig":"12"},{"size":243,"mtime":1608040719738,"results":"14","hashOfConfig":"12"},{"size":701,"mtime":1608748229235,"results":"15","hashOfConfig":"12"},{"size":1789,"mtime":1609331570046,"results":"16","hashOfConfig":"12"},{"size":94,"mtime":1608748229231,"results":"17","hashOfConfig":"12"},{"size":6434,"mtime":1609530077449,"results":"18","hashOfConfig":"12"},{"size":2075,"mtime":1609331570046,"results":"19","hashOfConfig":"12"},{"size":1147,"mtime":1608761632475,"results":"20","hashOfConfig":"12"},{"size":2005,"mtime":1608771589171,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1lez6op",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/index.js",[],["44","45"],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/App.js",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Redux/store.js",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Redux/reducer.js",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/Login/Login.jsx",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Redux/types.js",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/Homepage/Homepage.jsx",["46","47","48"],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/Register/Register.jsx",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Components/Navbar/Navbar.jsx",[],"/home/pablo/Escritorio/GeeksHubs/PROYECTOS/Proyecto final/proyectofinal-f/ProyectoFinal-f/src/Containers/People/People.jsx",["49","50"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { ALL_USERS } from '../../Redux/types';\nimport { Scrollbars } from 'rc-scrollbars'\nimport './People.scss';\n\n\nconst People = ({ dispatch, user, users }) => {\n\n\n    useEffect(() => {\n        const options = { headers: { Authorization: `Bearer ${user.token}` } };\n        axios.get('http://localhost:3000/users', options)\n\n            .then(users => dispatch({ type: ALL_USERS, payload: users.data }))\n            .catch(error => console.log())\n\n    }, []);\n\n    const followUser = async (_id) => {\n\n        try {\n            \n            const options = { headers: { Authorization: `Bearer ${user.token}` } };\n            await axios.put('http://localhost:3000/user/follow/' + _id, options);\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div className='people'>\n            <div className=\"usersContainer\">\n                <Scrollbars style={{ width: 1200, height: 425 }}>\n                    {users?.map(user =>\n                        <div className=\"userCard\" key={user._id}>\n                            <div className=\"userCardPhoto\"></div>\n                            <div className=\"userCardName\"><b>{user.name}  {user.surname},</b></div> &nbsp;\n                                    <div className=\"userCardAge\">{user.age}</div>\n                            <div className=\"followBox\">\n\n                                <button className=\"followButton\" onClick={() => { followUser(user._id) }} >+ Follow</button>\n                            </div>\n                            <div className=\"userCardBio\">Bio: {user.bio}</div>\n                        </div>)}\n\n                </Scrollbars>\n            </div>\n        </div>\n\n\n\n    )\n}\n\nconst mapStateToProps = state => {\n\n    return {\n        user: state.user,\n        posts: state.posts,\n        users: state.users\n    }\n}\n\n\nexport default connect(mapStateToProps)(People);\n\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":11,"column":12,"nodeType":"57","messageId":"58","endLine":11,"endColumn":17},{"ruleId":"55","severity":1,"message":"59","line":11,"column":19,"nodeType":"57","messageId":"58","endLine":11,"endColumn":27},{"ruleId":"60","severity":1,"message":"61","line":119,"column":25,"nodeType":"62","endLine":119,"endColumn":47},{"ruleId":"55","severity":1,"message":"63","line":1,"column":28,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"65","line":19,"column":8,"nodeType":"66","endLine":19,"endColumn":10,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'terms' is assigned a value but never used.","Identifier","unusedVar","'setTerms' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user.token'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [dispatch, user.token]",{"range":"73","text":"74"},[575,577],"[dispatch, user.token]"]